#
# Nginx config file
#
# This file was made to run for the Docker.io Nginx
#
# Docker info:
# docker run -d -p 80:80 -p 443:443 -v /root/nginx/sites-enabled:/etc/nginx/sites-enabled -v /root/nginx/logs:/var/log/nginx -v /root/nginx/ssl:/etc/nginx/ssl dockerfile/nginx
#		-passing in volumes for the nginx configs
#			-v <sites-enabled-dir>:/etc/nginx/sites-enabled
#					-v /root/nginx/sites-enabled:/etc/nginx/sites-enabled
#			-v <log-dir>:/var/log/nginx dockerfile/nginx
#			 		-v /root/nginx/logs:/var/log/nginx dockerfile/nginx
#           -v <ssl-dir>:/etc/nginx/ssl
#                   -v /root/nginx/ssl:/etc/nginx/ssl
#
#


#
# Upstream servers
#
upstream AutoDevBot.API.SocketIO{
  server streams1.autodevbot.com:80     max_fails=3  fail_timeout=30s;
}
upstream test.monitors{
 server api.autodevbot.com:9091	     max_fails=3  fail_timeout=30s;
}

#
# Production
#
# Front end Websocket server
#
server {
  listen 80;
  server_name api.autodevbot.com;
  server_tokens off;                # http://wiki.nginx.org/HttpCoreModule#server_tokens

  #
  # Location: Dashboard URL
  #
  # This has to go before the API "/" route b/c that will catch this location also
  #
  location ~ ^/dashboard/(.*) {
        resolver      8.8.8.8;

        set $path     '$1';

        set $true 1;

        proxy_pass    http://dashboard.autodevbot.com/$path;
  }

  #
  # Location: API URL
  #
  # domain.com/           - Forward the root to the default api version
  # domain.com/v1.0/      - REST API
  # domain.com/socket.io  - socket.io static files
  #
  location ~ ^/v1.0|/socket.io|/ {
    proxy_pass  http://AutoDevBot.API.SocketIO;

    # websocket config doc: http://nginx.org/en/docs/http/websocket.html
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  #access_log /var/log/nginx/access.production.v1.api.log;
  #error_log /var/log/nginx/error.production.v1.api.log;
}

#
# Production
#
# HTTPS - encrypted
#
server {
  listen 443;
  server_name api.autodevbot.com;
  server_tokens off;                # http://wiki.nginx.org/HttpCoreModule#server_tokens

    #
    # Location: Dashboard URL
    #
    location ~ ^/dashboard/(.*) {
          resolver      8.8.8.8;

          set $path     '$1';

          set $true 1;

          proxy_pass    http://dashboard.autodevbot.com/$path;
    }

    #
    # Location: API URL
    #
    # domain.com/           - Forward the root to the default api version
    # domain.com/v1.0/      - REST API
    # domain.com/socket.io  - socket.io static files
    #
    location ~ ^/v1.0|/socket.io|/ {
      proxy_pass  http://AutoDevBot.API.SocketIO;

      # websocket config doc: http://nginx.org/en/docs/http/websocket.html
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

  ssl on;
  ssl_certificate /etc/nginx/ssl/api.autodevbot.com.crt;
  ssl_certificate_key /etc/nginx/ssl/api.autodevbot.com.key;

  #access_log /var/log/nginx/access.production.www.log;
  #error_log /var/log/nginx/error.production.www.log;

}

#
# test monitoring server
#
server {
  listen 80;
  server_name test.autodevbot.com;
  location / {
    proxy_pass  http://test.monitors;
  }
}